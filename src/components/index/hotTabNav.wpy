<style lang='less'>
    .tabNav-container {
        width:100%;
        height:80rpx;
        padding:0 50rpx;
        box-sizing:border-box;
        font-size:32rpx;
        position:fixed;
        left:0;
        top:90rpx;
        right:0;
        z-index:102;
        background:rgb(253,253,253);
        .scrollNav-container {
            height:100%;
            white-space: nowrap;
        }
    }
    .into-item {
        display:inline-block;
        width:100rpx;
        height:80rpx;
        text-align:center;
        line-height:80rpx;
        white-space: nowrap;
        &.native {
            color:rgb(221,109,23);
            font-size:34rpx;
            font-weight:bold;
            position:relative;
            &:after {
                content:'';
                width:50rpx;
                height:10rpx;
                background:rgb(221,109,23);
                border-radius:10rpx;
                position:absolute;
                left:50%;
                bottom:2rpx;
                transform:translateX(-50%);
            }
        }
    }
</style>

<template>
    <view class="tabNav-container">
        <scroll-view scroll-x class="scrollNav-container">
            <repeat
                for="{{datas}}"
                key="{{index}}"
            >
                <view class="into-item {{deftId === item.itemId ? 'native' : '' }}" @tap="changeId({{item.itemId}})">{{item.itemValue}}</view>
            </repeat>
        </scroll-view>    
    </view>
</template>

<script>
    
    import wepy from 'wepy'

    export default class Index extends wepy.component {

        props = {
        	datas:{
                type:Array
            }
        };

        data = {
            deftId:"0"
        };

        components = {

        };

        methods = {
            changeId:(id) => {
                this.$emit('chanegChanndId',id);
                this.deftId = id;
                this.$apply();
            }
        };

        computed = {

        };

        onLoad() {
            
        };

        onShow() {

        };
    }

</script>